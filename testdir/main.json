{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.4.1124.51302",
      "templateHash": "6187164502423828562"
    }
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "main",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1124.51302",
              "templateHash": "4842224175776374437"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "cosmos",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "primaryRegion": {
                    "value": "North Europe"
                  },
                  "secondaryRegion": {
                    "value": "East US"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1124.51302",
                      "templateHash": "17938399375700025887"
                    }
                  },
                  "parameters": {
                    "accountName": {
                      "type": "string",
                      "defaultValue": "[format('sql-{0}', uniqueString(resourceGroup().id))]",
                      "metadata": {
                        "description": "Cosmos DB account name, max length 44 characters"
                      }
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]",
                      "metadata": {
                        "description": "Location for the Cosmos DB account."
                      }
                    },
                    "primaryRegion": {
                      "type": "string",
                      "metadata": {
                        "description": "The primary replica region for the Cosmos DB account."
                      }
                    },
                    "secondaryRegion": {
                      "type": "string",
                      "metadata": {
                        "description": "The secondary replica region for the Cosmos DB account."
                      }
                    },
                    "defaultConsistencyLevel": {
                      "type": "string",
                      "defaultValue": "Session",
                      "metadata": {
                        "description": "The default consistency level of the Cosmos DB account."
                      },
                      "allowedValues": [
                        "Eventual",
                        "ConsistentPrefix",
                        "Session",
                        "BoundedStaleness",
                        "Strong"
                      ]
                    },
                    "maxStalenessPrefix": {
                      "type": "int",
                      "defaultValue": 100000,
                      "metadata": {
                        "description": "Max stale requests. Required for BoundedStaleness. Valid ranges, Single Region: 10 to 1000000. Multi Region: 100000 to 1000000."
                      },
                      "maxValue": 2147483647,
                      "minValue": 10
                    },
                    "maxIntervalInSeconds": {
                      "type": "int",
                      "defaultValue": 300,
                      "metadata": {
                        "description": "Max lag time (minutes). Required for BoundedStaleness. Valid ranges, Single Region: 5 to 84600. Multi Region: 300 to 86400."
                      },
                      "maxValue": 86400,
                      "minValue": 5
                    },
                    "automaticFailover": {
                      "type": "bool",
                      "defaultValue": true,
                      "metadata": {
                        "description": "Enable automatic failover for regions"
                      }
                    },
                    "databaseName": {
                      "type": "string",
                      "defaultValue": "myDatabase",
                      "metadata": {
                        "description": "The name for the database"
                      }
                    },
                    "containerName": {
                      "type": "string",
                      "defaultValue": "myContainer",
                      "metadata": {
                        "description": "The name for the container"
                      }
                    },
                    "throughput": {
                      "type": "int",
                      "defaultValue": 400,
                      "metadata": {
                        "description": "The throughput for the container"
                      },
                      "maxValue": 1000000,
                      "minValue": 400
                    }
                  },
                  "variables": {
                    "accountName_var": "[toLower(parameters('accountName'))]",
                    "consistencyPolicy": {
                      "Eventual": {
                        "defaultConsistencyLevel": "Eventual"
                      },
                      "ConsistentPrefix": {
                        "defaultConsistencyLevel": "ConsistentPrefix"
                      },
                      "Session": {
                        "defaultConsistencyLevel": "Session"
                      },
                      "BoundedStaleness": {
                        "defaultConsistencyLevel": "BoundedStaleness",
                        "maxStalenessPrefix": "[parameters('maxStalenessPrefix')]",
                        "maxIntervalInSeconds": "[parameters('maxIntervalInSeconds')]"
                      },
                      "Strong": {
                        "defaultConsistencyLevel": "Strong"
                      }
                    },
                    "locations": [
                      {
                        "locationName": "[parameters('primaryRegion')]",
                        "failoverPriority": 0,
                        "isZoneRedundant": false
                      },
                      {
                        "locationName": "[parameters('secondaryRegion')]",
                        "failoverPriority": 1,
                        "isZoneRedundant": false
                      }
                    ]
                  },
                  "resources": [
                    {
                      "type": "Microsoft.DocumentDB/databaseAccounts",
                      "apiVersion": "2021-04-15",
                      "name": "[variables('accountName_var')]",
                      "location": "[parameters('location')]",
                      "kind": "GlobalDocumentDB",
                      "properties": {
                        "consistencyPolicy": "[variables('consistencyPolicy')[parameters('defaultConsistencyLevel')]]",
                        "locations": "[variables('locations')]",
                        "databaseAccountOfferType": "Standard",
                        "enableAutomaticFailover": "[parameters('automaticFailover')]"
                      }
                    },
                    {
                      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
                      "apiVersion": "2021-04-15",
                      "name": "[format('{0}/{1}', variables('accountName_var'), parameters('databaseName'))]",
                      "properties": {
                        "resource": {
                          "id": "[parameters('databaseName')]"
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('accountName_var'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
                      "apiVersion": "2021-04-15",
                      "name": "[format('{0}/{1}', format('{0}/{1}', variables('accountName_var'), parameters('databaseName')), parameters('containerName'))]",
                      "properties": {
                        "resource": {
                          "id": "[parameters('containerName')]",
                          "partitionKey": {
                            "paths": [
                              "/myPartitionKey"
                            ],
                            "kind": "Hash"
                          },
                          "indexingPolicy": {
                            "indexingMode": "consistent",
                            "includedPaths": [
                              {
                                "path": "/*"
                              }
                            ],
                            "excludedPaths": [
                              {
                                "path": "/myPathToNotIndex/*"
                              }
                            ],
                            "compositeIndexes": [
                              [
                                {
                                  "path": "/name",
                                  "order": "ascending"
                                },
                                {
                                  "path": "/age",
                                  "order": "descending"
                                }
                              ]
                            ]
                          },
                          "defaultTtl": 86400,
                          "uniqueKeyPolicy": {
                            "uniqueKeys": [
                              {
                                "paths": [
                                  "/phoneNumber"
                                ]
                              }
                            ]
                          }
                        },
                        "options": {
                          "throughput": "[parameters('throughput')]"
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', split(format('{0}/{1}', variables('accountName_var'), parameters('databaseName')), '/')[0], split(format('{0}/{1}', variables('accountName_var'), parameters('databaseName')), '/')[1])]"
                      ]
                    }
                  ],
                  "outputs": {
                    "containerName": {
                      "type": "string",
                      "value": "[format('{0}/{1}', format('{0}/{1}', variables('accountName_var'), parameters('databaseName')), parameters('containerName'))]"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "storedProcedures",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "containerName": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', 'cosmos'), '2020-10-01').outputs.containerName.value]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1124.51302",
                      "templateHash": "3828065271244074767"
                    }
                  },
                  "parameters": {
                    "containerName": {
                      "type": "string",
                      "metadata": {
                        "description": "Name of the container for server side procedures"
                      }
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/storedProcedures",
                      "apiVersion": "2021-04-15",
                      "name": "[format('{0}/{1}/{2}/{3}', split(parameters('containerName'), '/')[0], split(parameters('containerName'), '/')[1], split(parameters('containerName'), '/')[2], 'myStoredProcedure')]",
                      "properties": {
                        "resource": {
                          "id": "myStoredProcedure",
                          "body": "function () { var context = getContext(); var response = context.getResponse(); response.setBody('Hello, World'); }"
                        }
                      }
                    },
                    {
                      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/triggers",
                      "apiVersion": "2021-04-15",
                      "name": "[format('{0}/{1}/{2}/{3}', split(parameters('containerName'), '/')[0], split(parameters('containerName'), '/')[1], split(parameters('containerName'), '/')[2], 'myPreTrigger')]",
                      "properties": {
                        "resource": {
                          "id": "myPreTrigger",
                          "triggerType": "Pre",
                          "triggerOperation": "Create",
                          "body": "function validateToDoItemTimestamp(){var context=getContext();var request=context.getRequest();var itemToCreate=request.getBody();if(!('timestamp'in itemToCreate)){var ts=new Date();itemToCreate['timestamp']=ts.getTime();}request.setBody(itemToCreate);}"
                        }
                      }
                    },
                    {
                      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/userDefinedFunctions",
                      "apiVersion": "2021-04-15",
                      "name": "[format('{0}/{1}/{2}/{3}', split(parameters('containerName'), '/')[0], split(parameters('containerName'), '/')[1], split(parameters('containerName'), '/')[2], 'myUserDefinedFunction')]",
                      "properties": {
                        "resource": {
                          "id": "myUserDefinedFunction",
                          "body": "function tax(income){if(income==undefined)throw'no input';if(income<1000)return income*0.1;else if(income<10000)return income*0.2;else return income*0.4;}"
                        }
                      }
                    },
                    {
                      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/userDefinedFunctions",
                      "apiVersion": "2021-04-15",
                      "name": "[format('{0}/{1}/{2}/{3}', split(parameters('containerName'), '/')[0], split(parameters('containerName'), '/')[1], split(parameters('containerName'), '/')[2], 'myNewUserDefinedFunction')]",
                      "properties": {
                        "resource": {
                          "id": "myNewUserDefinedFunction",
                          "body": "function sayhello() { return \"Hello\" ;}"
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'cosmos')]"
              ]
            }
          ]
        }
      }
    }
  ]
}